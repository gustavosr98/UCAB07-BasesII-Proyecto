
-- TDAs
	-- PERIODO
		CREATE OR REPLACE TYPE Periodo AS OBJECT (
			-- ! NOT NULL sin funcionar
			fecha_inicio TIMESTAMP,
			fecha_fin TIMESTAMP,
			
			STATIC FUNCTION validar_periodo( fecha_inicio TIMESTAMP, fecha_fin TIMESTAMP ) RETURN NUMBER, -- DEVUELVE 1 o 0
			MEMBER FUNCTION tiempo_promedio_trayecto( trayecto_id NUMBER ) RETURN NUMBER,
			MEMBER FUNCTION diferencia_de_tiempo RETURN NUMBER
		);

		CREATE OR REPLACE TYPE BODY Periodo AS
			STATIC FUNCTION validar_periodo( fecha_inicio TIMESTAMP, fecha_fin TIMESTAMP ) RETURN NUMBER IS
				var_temporal NUMBER;	
			BEGIN
				RETURN 1;
			END;

			MEMBER FUNCTION tiempo_promedio_trayecto( trayecto_id NUMBER ) RETURN NUMBER IS
				var_temporal NUMBER;	
			BEGIN
				RETURN 1;
			END;

			MEMBER FUNCTION diferencia_de_tiempo RETURN NUMBER IS
			BEGIN
				RETURN 1;
			END;
		END;

	-- UNIDAD
		CREATE OR REPLACE TYPE Unidad AS OBJECT (
			tipo VARCHAR2(50),
			nombre VARCHAR2(50),
			cantidad VARCHAR2(50),
			
			STATIC FUNCTION convertir( tipo VARCHAR2, cantidad_a NUMBER, unid_a VARCHAR2 , unid_b VARCHAR2 ) RETURN NUMBER
		);

		CREATE OR REPLACE TYPE BODY Unidad AS
			STATIC FUNCTION convertir( tipo VARCHAR2, cantidad_a NUMBER, unid_a VARCHAR2 , unid_b VARCHAR2 ) RETURN NUMBER IS
				var_temporal NUMBER;	
			BEGIN
				RETURN 1;
			END;
		END;

	-- GEOLOCALIZACION
		CREATE OR REPLACE TYPE Geolocalizacion AS OBJECT (
			latitud NUMBER,
			longitud NUMBER,
			
			MEMBER FUNCTION calcular_distancia( latitud NUMBER, longitud NUMBER ) RETURN NUMBER
		);

		CREATE OR REPLACE TYPE BODY Geolocalizacion AS
			MEMBER FUNCTION calcular_distancia( latitud NUMBER, longitud NUMBER ) RETURN NUMBER IS
				var_temporal NUMBER;	
			BEGIN
				RETURN 1;
			END;
		END;


-- TABLAS
	-- TIPO_AVION
		CREATE TABLE Tipo_Avion (
			id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
			nombre VARCHAR2(50) NOT NULL,
			modelo VARCHAR2(50) NOT NULL,
			foto BLOB DEFAULT EMPTY_BLOB(),
			velocidad_max UNIDAD NOT NULL,
			alcance_max UNIDAD NOT NULL,
			altitud_max UNIDAD NOT NULL,
			evergadura UNIDAD NOT NULL,
			ancho_interior_cabina UNIDAD NOT NULL,
			altura_interior_cabina UNIDAD NOT NULL,

			CONSTRAINT tipo_avion_pk PRIMARY KEY (id)
		);

	-- AEROLINEA
		CREATE TABLE Aerolinea (
			id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
			nombre VARCHAR2(50) NOT NULL,
			tipo VARCHAR2(50) NOT NULL,
			logo BLOB DEFAULT EMPTY_BLOB(),

			CONSTRAINT aerolinea_pk PRIMARY KEY (id)
		);
	
	-- AVION
		CREATE TABLE Avion (
			id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
			fk_aerolinea NUMBER NOT NULL,
			fk_tipo_avion NUMBER NOT NULL,

			CONSTRAINT avion_pk PRIMARY KEY (id),
			CONSTRAINT avion_fk_aerolinea FOREIGN KEY (fk_aerolinea) REFERENCES Aerolinea(id),
			CONSTRAINT avion_fk_tipo_avion FOREIGN KEY (fk_tipo_avion) REFERENCES Tipo_Avion(id)
		);

	-- CLASE
		CREATE TABLE Clase (
			id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
			nombre VARCHAR2(50) NOT NULL,

			CONSTRAINT clase_pk PRIMARY KEY (id)
		);

	-- CLASE_AEROLINEA
		CREATE TABLE Clase_Aerolinea (
			id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
			fk_aerolinea NUMBER NOT NULL,
			fk_clase NUMBER NOT NULL,

			CONSTRAINT clase_aerolinea_pk PRIMARY KEY (id),
			CONSTRAINT clase_aerolinea_fk_aerolinea FOREIGN KEY (fk_aerolinea) REFERENCES Aerolinea(id),
			CONSTRAINT clase_aerolinea_fk_clase FOREIGN KEY (fk_clase) REFERENCES Clase(id)
		);

	-- ASIENTO
		CREATE TABLE Asiento (
			id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
			fk_avion NUMBER NOT NULL,
			fk_clase NUMBER NOT NULL,
			fila VARCHAR2(5) NOT NULL,
			columna VARCHAR2(5) NOT NULL,
			es_ventana CHAR(1) NOT NULL CHECK( es_ventana = 'T' OR es_ventana = 'F'),
			es_pasillo CHAR(1) NOT NULL CHECK( es_pasillo = 'T' OR es_pasillo = 'F'),
			es_de_emergencia CHAR(1) NOT NULL CHECK( es_de_emergencia = 'T' OR es_de_emergencia = 'F'),

			CONSTRAINT asiento_pk PRIMARY KEY (id),
			CONSTRAINT asiento_fk_avion FOREIGN KEY (fk_avion) REFERENCES Avion(id),
			CONSTRAINT asiento_fk_clase FOREIGN KEY (fk_clase) REFERENCES Clase(id)
		);